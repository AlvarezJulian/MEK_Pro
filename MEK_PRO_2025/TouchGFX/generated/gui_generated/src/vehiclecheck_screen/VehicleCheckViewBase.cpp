/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/vehiclecheck_screen/VehicleCheckViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

VehicleCheckViewBase::VehicleCheckViewBase() :
    buttonCallback(this, &VehicleCheckViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 480, 800);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background_blueWhite.setBitmap(touchgfx::Bitmap(BITMAP_HINTERGRUND_2_ID));
    background_blueWhite.setPosition(0, 0, 480, 800);
    background_blueWhite.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(background_blueWhite);

    MEK_Logo.setXY(170, 700);
    MEK_Logo.setBitmap(touchgfx::Bitmap(BITMAP_MEK_LOGO_140X61_ID));
    add(MEK_Logo);

    Check_Count.setXY(212, 674);
    Check_Count.setColor(touchgfx::Color::getColorFromRGB(0, 92, 169));
    Check_Count.setLinespacing(0);
    touchgfx::Unicode::snprintf(Check_CountBuffer1, CHECK_COUNTBUFFER1_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_Z3DE).getText());
    Check_Count.setWildcard1(Check_CountBuffer1);
    touchgfx::Unicode::snprintf(Check_CountBuffer2, CHECK_COUNTBUFFER2_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_FN4I).getText());
    Check_Count.setWildcard2(Check_CountBuffer2);
    Check_Count.resizeToCurrentText();
    Check_Count.setTypedText(touchgfx::TypedText(T___SINGLEUSE_N3WC));
    add(Check_Count);

    btn_bad.setXY(75, 580);
    btn_bad.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON300X72_ID), touchgfx::Bitmap(BITMAP_BUTTON300X72_PRESSED_ID));
    btn_bad.setLabelText(touchgfx::TypedText(T___SINGLEUSE_8VM5));
    btn_bad.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btn_bad.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btn_bad.setAction(buttonCallback);
    add(btn_bad);

    btn_ok.setXY(75, 486);
    btn_ok.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON300X72_ID), touchgfx::Bitmap(BITMAP_BUTTON300X72_PRESSED_ID));
    btn_ok.setLabelText(touchgfx::TypedText(T___SINGLEUSE_ZVD9));
    btn_ok.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btn_ok.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btn_ok.setAction(buttonCallback);
    add(btn_ok);

    btn_good.setXY(89, 363);
    btn_good.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_10_ID), touchgfx::Bitmap(BITMAP_BUTTON_10_PRESSED_ID));
    btn_good.setLabelText(touchgfx::TypedText(T___SINGLEUSE_8G32));
    btn_good.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btn_good.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    btn_good.setVisible(false);
    btn_good.setAction(buttonCallback);
    add(btn_good);

    Background_question.setBitmap(touchgfx::Bitmap(BITMAP_IMAGE_08_ID));
    Background_question.setPosition(38, 315, 404, 171);
    Background_question.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(Background_question);

    question_Text.setPosition(101, 347, 278, 107);
    question_Text.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    question_Text.setLinespacing(1);
    question_Text.setTypedText(touchgfx::TypedText(T_F01_BELEUCHTUNG));
    question_Text.setAlpha(190);
    add(question_Text);

    text_Abfahrskontrolle.setXY(116, 255);
    text_Abfahrskontrolle.setColor(touchgfx::Color::getColorFromRGB(0, 92, 169));
    text_Abfahrskontrolle.setLinespacing(0);
    text_Abfahrskontrolle.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JBEU));
    add(text_Abfahrskontrolle);

    Icon.setXY(204, 140);
    Icon.setBitmap(touchgfx::Bitmap(BITMAP_ICON_ABFAHRTSKONTROLLE_72X100PX_ID));
    add(Icon);

    topMenu1.setXY(0, 0);
    add(topMenu1);
}

VehicleCheckViewBase::~VehicleCheckViewBase()
{

}

void VehicleCheckViewBase::setupScreen()
{
    topMenu1.initialize();
}

void VehicleCheckViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &btn_good)
    {
        //btn_Good_Clicked
        //When btn_good clicked call virtual function
        //Call btn_Good_Clicked
        btn_Good_Clicked();
    }
    if (&src == &btn_ok)
    {
        //btn_Ok_Clicked
        //When btn_ok clicked call virtual function
        //Call btn_Ok_Clicked
        btn_Ok_Clicked();
    }
    if (&src == &btn_bad)
    {
        //btn_Bad_Clicked
        //When btn_bad clicked call virtual function
        //Call btn_Bad_Clicked
        btn_Bad_Clicked();
    }
}
