/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef VEHICLEVIEWBASE_HPP
#define VEHICLEVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/vehicle_screen/VehiclePresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <gui/containers/TopMenu.hpp>
#include <gui/containers/BottomMenu.hpp>

class VehicleViewBase : public touchgfx::View<VehiclePresenter>
{
public:
    VehicleViewBase();
    virtual ~VehicleViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void btn_AceptControl_clicked()
    {
        // Override and implement this function in Vehicle
    }
    virtual void btn_backToMenu_clicked()
    {
        // Override and implement this function in Vehicle
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ScalableImage background_WhiteBlue;
    touchgfx::Image Logo;
    touchgfx::ButtonWithLabel btn_AceptControl;
    touchgfx::ButtonWithLabel btn_backToMainMenu;
    touchgfx::TextArea text_Hinweis;
    touchgfx::TextAreaWithOneWildcard User_ID;
    TopMenu topMenu;
    BottomMenu bottomMenu1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t USER_ID_SIZE = 10;
    touchgfx::Unicode::UnicodeChar User_IDBuffer[USER_ID_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<VehicleViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // VEHICLEVIEWBASE_HPP
