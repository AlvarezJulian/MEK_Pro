/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef VEHICLECHECKVIEWBASE_HPP
#define VEHICLECHECKVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/vehiclecheck_screen/VehicleCheckPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <gui/containers/TopMenu.hpp>

class VehicleCheckViewBase : public touchgfx::View<VehicleCheckPresenter>
{
public:
    VehicleCheckViewBase();
    virtual ~VehicleCheckViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void btn_Good_Clicked()
    {
        // Override and implement this function in VehicleCheck
    }
    virtual void btn_Ok_Clicked()
    {
        // Override and implement this function in VehicleCheck
    }
    virtual void btn_Bad_Clicked()
    {
        // Override and implement this function in VehicleCheck
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ScalableImage background_blueWhite;
    touchgfx::Image MEK_Logo;
    touchgfx::TextAreaWithTwoWildcards Check_Count;
    touchgfx::ButtonWithLabel btn_bad;
    touchgfx::ButtonWithLabel btn_ok;
    touchgfx::ButtonWithLabel btn_good;
    touchgfx::ScalableImage Background_question;
    touchgfx::TextArea question_Text;
    touchgfx::TextArea text_Abfahrskontrolle;
    touchgfx::Image Icon;
    TopMenu topMenu1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t CHECK_COUNTBUFFER1_SIZE = 5;
    touchgfx::Unicode::UnicodeChar Check_CountBuffer1[CHECK_COUNTBUFFER1_SIZE];
    static const uint16_t CHECK_COUNTBUFFER2_SIZE = 5;
    touchgfx::Unicode::UnicodeChar Check_CountBuffer2[CHECK_COUNTBUFFER2_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<VehicleCheckViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // VEHICLECHECKVIEWBASE_HPP
