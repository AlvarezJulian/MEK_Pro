/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef FRONTENDHEAPBASE_HPP
#define FRONTENDHEAPBASE_HPP

#include <common/Meta.hpp>
#include <common/Partition.hpp>
#include <mvp/MVPHeap.hpp>

#include <touchgfx/transitions/NoTransition.hpp>
#include <gui/common/FrontendApplication.hpp>
#include <gui/model/Model.hpp>

#include <gui/start_screen/StartView.hpp>
#include <gui/start_screen/StartPresenter.hpp>
#include <gui/select_screen/SelectView.hpp>
#include <gui/select_screen/SelectPresenter.hpp>
#include <gui/rs232_screen/RS232View.hpp>
#include <gui/rs232_screen/RS232Presenter.hpp>
#include <gui/rs485_screen/RS485View.hpp>
#include <gui/rs485_screen/RS485Presenter.hpp>
#include <gui/can_screen/CANView.hpp>
#include <gui/can_screen/CANPresenter.hpp>
#include <gui/spi_screen/SPIView.hpp>
#include <gui/spi_screen/SPIPresenter.hpp>
#include <gui/i2c_screen/I2CView.hpp>
#include <gui/i2c_screen/I2CPresenter.hpp>
#include <gui/cdc_screen/CDCView.hpp>
#include <gui/cdc_screen/CDCPresenter.hpp>
#include <gui/gpio_screen/GPIOView.hpp>
#include <gui/gpio_screen/GPIOPresenter.hpp>
#include <gui/hid_screen/HIDView.hpp>
#include <gui/hid_screen/HIDPresenter.hpp>
#include <gui/info_screen/INFOView.hpp>
#include <gui/info_screen/INFOPresenter.hpp>


/**
 * This class provides the memory that shall be used for memory allocations
 * in the frontend. A single instance of the FrontendHeap is allocated once (in heap
 * memory), and all other frontend objects such as views, presenters and data model are
 * allocated within the scope of this FrontendHeap. As such, the RAM usage of the entire
 * user interface is sizeof(FrontendHeap).
 *
 * @note The FrontendHeap reserves memory for the most memory-consuming presenter and
 * view only. The largest of these classes are determined at compile-time using template
 * magic. As such, it is important to add all presenters, views and transitions to the
 * type lists in this class.
 *
 */
class FrontendHeapBase : public touchgfx::MVPHeap
{
public:
    /**
     * A list of all view types. Must end with meta::Nil.
     * @note All view types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< StartView,
            touchgfx::meta::TypeList< SelectView,
            touchgfx::meta::TypeList< RS232View,
            touchgfx::meta::TypeList< RS485View,
            touchgfx::meta::TypeList< CANView,
            touchgfx::meta::TypeList< SPIView,
            touchgfx::meta::TypeList< I2CView,
            touchgfx::meta::TypeList< CDCView,
            touchgfx::meta::TypeList< GPIOView,
            touchgfx::meta::TypeList< HIDView,
            touchgfx::meta::TypeList< INFOView,
            touchgfx::meta::Nil > > > > > > > > > >
            > GeneratedViewTypes;

    /**
     * Determine (compile time) the View type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedViewTypes >::type MaxGeneratedViewType;

    /**
     * A list of all presenter types. Must end with meta::Nil.
     * @note All presenter types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< StartPresenter,
            touchgfx::meta::TypeList< SelectPresenter,
            touchgfx::meta::TypeList< RS232Presenter,
            touchgfx::meta::TypeList< RS485Presenter,
            touchgfx::meta::TypeList< CANPresenter,
            touchgfx::meta::TypeList< SPIPresenter,
            touchgfx::meta::TypeList< I2CPresenter,
            touchgfx::meta::TypeList< CDCPresenter,
            touchgfx::meta::TypeList< GPIOPresenter,
            touchgfx::meta::TypeList< HIDPresenter,
            touchgfx::meta::TypeList< INFOPresenter,
            touchgfx::meta::Nil > > > > > > > > > >
            > GeneratedPresenterTypes;

    /**
     * Determine (compile time) the Presenter type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedPresenterTypes >::type MaxGeneratedPresenterType;

    /**
     * A list of all transition types. Must end with meta::Nil.
     * @note All transition types used in the application MUST be added to this list!
     */
    typedef touchgfx::meta::TypeList< touchgfx::NoTransition,
            touchgfx::meta::Nil
            > GeneratedTransitionTypes;

    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoStartScreenNoTransition();
    }
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
        : MVPHeap(presenters, views, transitions, app)
    {

    }

};

#endif // FRONTENDHEAPBASE_HPP
