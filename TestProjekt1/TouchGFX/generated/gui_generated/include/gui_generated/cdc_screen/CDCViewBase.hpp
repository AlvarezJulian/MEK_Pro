/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CDCVIEWBASE_HPP
#define CDCVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/cdc_screen/CDCPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/Slider.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/progress_indicators/ImageProgress.hpp>
#include <touchgfx/containers/progress_indicators/CircleProgress.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/containers/progress_indicators/BoxProgress.hpp>

class CDCViewBase : public touchgfx::View<CDCPresenter>
{
public:
    CDCViewBase();
    virtual ~CDCViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void USBCDCSendSliderValue(int value)
    {
        // Override and implement this function in CDC
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box1;
    touchgfx::ButtonWithLabel BackButton;
    touchgfx::TextArea textArea1;
    touchgfx::Slider slider1;
    touchgfx::TextArea textArea2;
    touchgfx::TextAreaWithOneWildcard USBCDCSliderValue;
    touchgfx::ImageProgress imageProgress1;
    touchgfx::CircleProgress circleProgress1;
    touchgfx::PainterRGB565 circleProgress1Painter;
    touchgfx::BoxProgress boxProgress1;

    /*
     * Wildcard Buffers
     */
    static const uint16_t USBCDCSLIDERVALUE_SIZE = 5;
    touchgfx::Unicode::UnicodeChar USBCDCSliderValueBuffer[USBCDCSLIDERVALUE_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<CDCViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<CDCViewBase, const touchgfx::Slider&, int> sliderValueChangedCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value);

};

#endif // CDCVIEWBASE_HPP
