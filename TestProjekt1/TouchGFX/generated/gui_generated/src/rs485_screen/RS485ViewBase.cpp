/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/rs485_screen/RS485ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

RS485ViewBase::RS485ViewBase() :
    buttonCallback(this, &RS485ViewBase::buttonCallbackHandler),
    sliderValueChangedCallback(this, &RS485ViewBase::sliderValueChangedCallbackHandler)
{
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box1.setPosition(0, 0, 800, 480);
    box1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(box1);

    textArea1.setXY(9, 0);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(135, 205, 75));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CFTP));
    add(textArea1);

    BackButton.setXY(700, 14);
    BackButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUISH3_ID), touchgfx::Bitmap(BITMAP_BLUISH3_ID));
    BackButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_UVE6));
    BackButton.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    BackButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    BackButton.setAction(buttonCallback);
    add(BackButton);

    BacklightSlider.setXY(62, 383);
    BacklightSlider.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_LARGE_SLIDER_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_LARGE_SLIDER_ROUND_FILL_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_LARGE_INDICATORS_SLIDER_ROUND_NOB_ID));
    BacklightSlider.setupHorizontalSlider(2, 22, 0, 0, 621);
    BacklightSlider.setValueRange(8, 100);
    BacklightSlider.setValue(80);
    BacklightSlider.setNewValueCallback(sliderValueChangedCallback);
    add(BacklightSlider);

    Min.setPosition(84, 332, 31, 25);
    Min.setColor(touchgfx::Color::getColorFromRGB(0, 255, 0));
    Min.setLinespacing(0);
    Min.setTypedText(touchgfx::TypedText(T___SINGLEUSE_O12W));
    add(Min);

    Max.setPosition(693, 332, 76, 25);
    Max.setColor(touchgfx::Color::getColorFromRGB(0, 255, 0));
    Max.setLinespacing(0);
    Max.setTypedText(touchgfx::TypedText(T___SINGLEUSE_D434));
    add(Max);

    BacklightSliderValue.setPosition(362, 332, 76, 25);
    BacklightSliderValue.setColor(touchgfx::Color::getColorFromRGB(0, 255, 0));
    BacklightSliderValue.setLinespacing(0);
    Unicode::snprintf(BacklightSliderValueBuffer, BACKLIGHTSLIDERVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_ARUP).getText());
    BacklightSliderValue.setWildcard(BacklightSliderValueBuffer);
    BacklightSliderValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TW6I));
    add(BacklightSliderValue);
}

RS485ViewBase::~RS485ViewBase()
{

}

void RS485ViewBase::setupScreen()
{

}

void RS485ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &BackButton)
    {
        //GoToSelect
        //When BackButton clicked change screen to Select
        //Go to Select with no screen transition
        application().gotoSelectScreenNoTransition();
    }
}

void RS485ViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &BacklightSlider)
    {
        //BacklightSliderValueChanged
        //When BacklightSlider value changed call virtual function
        //Call BacklightSliderValueChanged
        BacklightSliderValueChanged(value);
    }
}
