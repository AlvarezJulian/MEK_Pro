/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/rs232_screen/RS232ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

RS232ViewBase::RS232ViewBase() :
    buttonCallback(this, &RS232ViewBase::buttonCallbackHandler),
    sliderValueChangedCallback(this, &RS232ViewBase::sliderValueChangedCallbackHandler)
{
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box1.setPosition(0, 0, 800, 480);
    box1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(box1);

    textArea1.setXY(9, 0);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(135, 205, 75));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y1Q9));
    add(textArea1);

    BackButton.setXY(700, 14);
    BackButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUISH3_ID), touchgfx::Bitmap(BITMAP_BLUISH3_ID));
    BackButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_1WDM));
    BackButton.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    BackButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(0, 0, 0));
    BackButton.setAction(buttonCallback);
    add(BackButton);

    Slider.setXY(62, 383);
    Slider.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_LARGE_SLIDER_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_LARGE_SLIDER_ROUND_FILL_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_LARGE_INDICATORS_SLIDER_ROUND_NOB_ID));
    Slider.setupHorizontalSlider(2, 22, 0, 0, 621);
    Slider.setValueRange(0, 100);
    Slider.setValue(50);
    Slider.setNewValueCallback(sliderValueChangedCallback);
    add(Slider);

    textArea2.setPosition(84, 332, 31, 25);
    textArea2.setColor(touchgfx::Color::getColorFromRGB(0, 255, 0));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_O1VJ));
    add(textArea2);

    textArea2_1.setPosition(693, 332, 76, 25);
    textArea2_1.setColor(touchgfx::Color::getColorFromRGB(0, 255, 0));
    textArea2_1.setLinespacing(0);
    textArea2_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QNF8));
    add(textArea2_1);

    SliderValue.setPosition(362, 332, 76, 25);
    SliderValue.setColor(touchgfx::Color::getColorFromRGB(0, 255, 0));
    SliderValue.setLinespacing(0);
    Unicode::snprintf(SliderValueBuffer, SLIDERVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_Y3SJ).getText());
    SliderValue.setWildcard(SliderValueBuffer);
    SliderValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ENGN));
    add(SliderValue);

    RS232RXString.setPosition(162, 210, 638, 30);
    RS232RXString.setColor(touchgfx::Color::getColorFromRGB(255, 148, 0));
    RS232RXString.setLinespacing(0);
    Unicode::snprintf(RS232RXStringBuffer, RS232RXSTRING_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_805X).getText());
    RS232RXString.setWildcard(RS232RXStringBuffer);
    RS232RXString.setTypedText(touchgfx::TypedText(T___SINGLEUSE_F2FQ));
    add(RS232RXString);
}

RS232ViewBase::~RS232ViewBase()
{

}

void RS232ViewBase::setupScreen()
{

}

void RS232ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &BackButton)
    {
        //GoToSelect
        //When BackButton clicked change screen to Select
        //Go to Select with no screen transition
        application().gotoSelectScreenNoTransition();
    }
}

void RS232ViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &Slider)
    {
        //RS232SliderValueChanged
        //When Slider value changed call virtual function
        //Call RS232SliderValueChanged
        RS232SliderValueChanged(value);
    }
}
