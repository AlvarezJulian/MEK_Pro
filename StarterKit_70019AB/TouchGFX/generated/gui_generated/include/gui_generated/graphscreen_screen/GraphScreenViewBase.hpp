/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef GRAPHSCREENVIEWBASE_HPP
#define GRAPHSCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/graphscreen_screen/GraphScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/graph/GraphWrapAndClear.hpp>
#include <touchgfx/widgets/graph/GraphElements.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class GraphScreenViewBase : public touchgfx::View<GraphScreenPresenter>
{
public:
    GraphScreenViewBase();
    virtual ~GraphScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box background;
    touchgfx::ImageButtonStyle< touchgfx::ClickButtonTrigger >  flexButton_home;
    touchgfx::Box axis_y;
    touchgfx::Box axis_x;
    touchgfx::GraphWrapAndClear<345> graph_humidity;
    touchgfx::GraphElementLine graph_humidityLine1;
    touchgfx::PainterRGB565 graph_humidityLine1Painter;
    touchgfx::GraphWrapAndClear<345> graph_temperature;
    touchgfx::GraphElementLine graph_temperatureLine1;
    touchgfx::PainterRGB565 graph_temperatureLine1Painter;
    touchgfx::TextAreaWithOneWildcard textArea_TempVal;
    touchgfx::TextAreaWithOneWildcard textArea_HumidVal;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA_TEMPVAL_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea_TempValBuffer[TEXTAREA_TEMPVAL_SIZE];
    static const uint16_t TEXTAREA_HUMIDVAL_SIZE = 10;
    touchgfx::Unicode::UnicodeChar textArea_HumidValBuffer[TEXTAREA_HUMIDVAL_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 12000;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<GraphScreenViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // GRAPHSCREENVIEWBASE_HPP
