/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/mainscreen_screen/MainScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

MainScreenViewBase::MainScreenViewBase() :
    buttonCallback(this, &MainScreenViewBase::buttonCallbackHandler),
    sliderValueChangedCallback(this, &MainScreenViewBase::sliderValueChangedCallbackHandler)
{
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setPosition(0, 0, 800, 480);
    background.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    add(background);

    textTemp.setXY(78, 49);
    textTemp.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textTemp.setLinespacing(0);
    textTemp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PW6X));
    add(textTemp);

    textHumid.setXY(78, 125);
    textHumid.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textHumid.setLinespacing(0);
    textHumid.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TAM8));
    add(textHumid);

    slider_backlight.setXY(78, 394);
    slider_backlight.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_LARGE_SLIDER_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_LARGE_SLIDER_ROUND_BACK_ID), touchgfx::Bitmap(BITMAP_BLUE_SLIDER_HORIZONTAL_LARGE_INDICATORS_SLIDER_ROUND_NOB_ID));
    slider_backlight.setupHorizontalSlider(2, 22, 0, 0, 621);
    slider_backlight.setValueRange(0, 100);
    slider_backlight.setValue(100);
    slider_backlight.setNewValueCallback(sliderValueChangedCallback);
    add(slider_backlight);

    button_graph.setXY(78, 201);
    button_graph.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_MEDIUM_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_MEDIUM_PRESSED_ID));
    button_graph.setLabelText(touchgfx::TypedText(T___SINGLEUSE_FLSX));
    button_graph.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    button_graph.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    button_graph.setAction(buttonCallback);
    add(button_graph);

    textProgress_humid.setXY(552, 125);
    textProgress_humid.setProgressIndicatorPosition(0, 7, 154, 54);
    textProgress_humid.setRange(0, 100);
    textProgress_humid.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textProgress_humid.setTypedText(touchgfx::TypedText(T_RESOURCEID_DEFAULTHUMID));
    textProgress_humid.setBackground(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_LARGE_TEXT_PROGRESS_BG_SQUARE_ID));
    textProgress_humid.setValue(60);
    add(textProgress_humid);

    image_temp_background.setXY(552, 44);
    image_temp_background.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_PROGRESSINDICATORS_BG_LARGE_TEXT_PROGRESS_BG_SQUARE_ID));
    add(image_temp_background);

    textArea_temp.setPosition(552, 52, 154, 38);
    textArea_temp.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea_temp.setLinespacing(0);
    Unicode::snprintf(textArea_tempBuffer, TEXTAREA_TEMP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_FMNG).getText());
    textArea_temp.setWildcard(textArea_tempBuffer);
    textArea_temp.setTypedText(touchgfx::TypedText(T_RESOURCEID_DEFAULTTEMP));
    add(textArea_temp);

    textBrightness.setXY(78, 329);
    textBrightness.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textBrightness.setLinespacing(0);
    textBrightness.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7YHC));
    add(textBrightness);

    textArea_Backlight.setPosition(575, 329, 109, 41);
    textArea_Backlight.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea_Backlight.setLinespacing(0);
    Unicode::snprintf(textArea_BacklightBuffer, TEXTAREA_BACKLIGHT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_S31U).getText());
    textArea_Backlight.setWildcard(textArea_BacklightBuffer);
    textArea_Backlight.setTypedText(touchgfx::TypedText(T_RESOURCEID_DEFAULTHUMID));
    textArea_Backlight.setAlpha(0);
    add(textArea_Backlight);
}

MainScreenViewBase::~MainScreenViewBase()
{

}

void MainScreenViewBase::setupScreen()
{

}

void MainScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button_graph)
    {
        //GoToGraphScreen
        //When button_graph clicked change screen to GraphScreen
        //Go to GraphScreen with screen transition towards East
        application().gotoGraphScreenScreenSlideTransitionEast();
    }
}

void MainScreenViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &slider_backlight)
    {
        //UpdateBacklightValue
        //When slider_backlight value changed call virtual function
        //Call handleSliderValue
        handleSliderValue(value);
    }
}
