/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef GPIO_CONTROLVIEWBASE_HPP
#define GPIO_CONTROLVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/gpio_control_screen/GPIO_ControlPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/Button.hpp>

class GPIO_ControlViewBase : public touchgfx::View<GPIO_ControlPresenter>
{
public:
    GPIO_ControlViewBase();
    virtual ~GPIO_ControlViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void LED_ON()
    {
        // Override and implement this function in GPIO_Control
    }
    virtual void LED_OFF()
    {
        // Override and implement this function in GPIO_Control
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ButtonWithLabel btn_ledON;
    touchgfx::ButtonWithLabel btn_ledOFF;
    touchgfx::Button btn_ShowHome2;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<GPIO_ControlViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // GPIO_CONTROLVIEWBASE_HPP
